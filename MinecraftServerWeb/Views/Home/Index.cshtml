@using System.Security.Claims
@using MinecraftServerWeb.Utility
@model IndexViewModel
@inject IWebHostEnvironment WebHostEnvironment
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Home Page";
}
<div id="content-wrapper" class="container-xxl">
    <!-- Server Banner -->
<div class="text-center">
    <img src="https://cdn.shopify.com/s/files/1/0580/2885/files/sleek_free_minecraft_server_banner.gif?v=1528340534" class="img-fluid" alt="server banner" style="padding-top: 5px; width: auto; height: 200px"/>
</div>
<!-- Server Status -->
<div class="text-center">
    <img src="https://api.loohpjames.com/serverbanner.png?ip=2b2t.org" class="img-fluid" alt="server banner" style="padding-top: 5px; width: auto; height: 100px"/>
</div>
<br/>
<!-- Title -->
<div class="d-xxl-grid">
<div class="row">
<div class="offset-md-4">
    <h3 class="display-3">Ogłoszenia</h3>
</div>
<!-- Announcements -->
<div class="col-lg-9">
    <!-- Author info -->
    @{
        const int postsPerPage = 2;
        if (postsPerPage <= 0)
#pragma warning disable CS0162
        {
            throw new ArgumentOutOfRangeException();
        }
        #pragma warning restore CS0162

        for (int postIndex = (Model.PageId - 1) * postsPerPage; postIndex < Model.Announcements.Count() && postIndex != (Model.PageId - 1) * postsPerPage + postsPerPage; postIndex++)
        {
            var post = Model.Announcements.ElementAt(postIndex);
            User? author = Model.Users.FirstOrDefault(e => e.Id == post.AuthorId);
                    <div class="card border-secondary mt-lg-4" style="background-color: #220e40 !important;">
                        <div class="row">
                            <div class="col-lg-2 text-center pe-lg-2 mt-lg-3 ms-lg-4">
                                <div class="card me-lg-1">
                                    <img src="@UserImagesManager.GetUserImagePath(author.Email, WebHostEnvironment, "300")" asp-append-version="true" class="rounded mx-auto d-block mb-2 img-fluid"
                                         style="" alt="image of user"/>
                                    <div class="mt-2 badge bg-primary text-wrap"> @author.ForumNickname </div>
                                    <div class="mt-2 badge bg-danger text-wrap"> @author.Rank </div>
                                    <div class="mt-2 badge bg-secondary text-wrap">
                                        <p>Dodano:</p>
                                        <p>@post.DateCreated.ToString("HH:mm dd/MM/yyyy") </p></div>
                                </div>
                            </div>
                            <div class="col-lg-9 ms-lg-2" id="AnnouncementContent">
                                <h4 class="display-6 mt-lg-2 text-center">
                                    @post.Title
                                </h4>
                                @if (post.Description != null)
                        {
                                    <p class="form-control mt-lg-3 text-white">
                                        @post.Description
                                    </p>
                        }
                                <!-- content of Announcements -->
                                @{
                            const int maximumShownWords = 90;

                            if (post.Content.Split(" ").Length > maximumShownWords)
                            {

                                                <p class="form-control" readonly>
                                                    @String.Join(" ", post.Content.Split(" ").Take(maximumShownWords))....
                                                    <a asp-controller="Announcement" asp-action="Details" asp-route-announcementId="@post.PostId" class="link-warning fw-bold ">czytaj całość</a>
                                                </p>
                            }
                            else
                            {
                                                <p class="form-control" readonly>
                                                    @post.Content
                                                </p>
                            }
                                }

                                <!-- Buttons for each announcement-->
                                <div class="row align-items-end">
                                    <div class="col-md-6 mb-2">
                                        <a class="btn btn-outline-danger me-2" data-bs-toggle="collapse" href="#Current_@post.PostId" role="button" aria-expanded="false" aria-controls="#Current_@post.PostId"> Komentarze (@Model.Comments.Count(e => e.PostId == post.PostId)) </a>
                                        <a class="btn btn-outline-warning" asp-controller="Announcement" asp-action="Details" asp-route-announcementId="@post.PostId" class="link-primary fw-bold">Szczegóły</a>
                                    </div>
                                    @if (User.FindFirstValue(ClaimTypes.NameIdentifier) == post.AuthorId)
                            {
                                        <div class="col-md-6">
                                            @Html.AntiForgeryToken()
                                            <a asp-controller="Announcement" asp-action="Edit" asp-route-announcementId="@post.PostId" class="btn btn-outline-warning float-end ms-3 "> Edytuj </a>
                                            <a class="btn btn-outline-danger ms-3 float-end" onclick="DeletePost('@post.Title', '/Announcement/Delete/@post.PostId')"> Usuń </a>
                                        </div>
                            }
                                </div>
                                <!-- Collapsed last comments-->
                                @{
                            const int maxRecentComments = 3; // How many comments will be displayed on index page per post.
                            var postComments = Model.Comments.Where(e => e.PostId == post.PostId).OrderByDescending(e => e.DateCreated).Take(maxRecentComments);
                                            <div class="collapse mt-3" id="Current_@post.PostId">
                                                @foreach (Comment comment in postComments)
                                {
                                    User commentAuthor = Model.Users.FirstOrDefault(e => e.Id == comment.AuthorId);
                                    CommentViewModel commentViewModel = new CommentViewModel
                                    {
                                        Comment = comment,
                                        CommentAuthor = commentAuthor
                                    };
                                                    <partial name="_Comment" for="@commentViewModel"/>
                                }
                                            </div>
                                }
                                @if (User.Identity.IsAuthenticated)
                        {
                            <!-- create comment for announcement -->
                            var currentUserEmail = User.FindFirstValue(ClaimTypes.Email);
                                    <div class="d-flex flex-row mt-3 mb-4">
                                        <img src="@UserImagesManager.GetUserImagePath(currentUserEmail, WebHostEnvironment, "100")" asp-append-version="true" class="shadow-lg mx-auto d-block mb-1 me-3 mt-1 img-fluid rounded-circle"
                                             style="padding: 5px;" alt="image of user"/>
                                        @Html.AntiForgeryToken()
                                        <textarea style="resize: none;" type="text" class="form-control me-3" placeholder="Dodaj komentarz" id="CommentForm_@post.PostId"></textarea>
                                        <button class="btn btn-primary" type="button" onclick="addComment(@post.PostId)"> Dodaj komentarz </button>
                                    </div>
                        }
                            </div>
                        </div>
                    </div>
        }
    }
</div>
<!-- Side panel-->
<div class="col-lg-3">
    <div class="row">
        @if (!User.Identity.IsAuthenticated)
        {
            <div class="py-2 me-1 mt-3">
                <partial name="_LoginPanel" for="@Model.LoginModel"/>
            </div>
        }
        else
        {
            <div class="card shadow h-100 py-2 me-1 mt-4 border-primary">
                <div class="card-header py-3">
                    <h5 class="fw-bold text-warning">
                        Zalogowano jako:
                    </h5>
                    <h6 class="ps-2">
                        @User.Identity.Name
                    </h6>
                </div>
                <div class="card-body">
                    <div class="list-group">
                        <a href="#" class="list-group-item list-group-item-action">
                            Zarządzanie Kontem
                        </a>
                        <a href="#" class="list-group-item list-group-item-action">
                            Panel Gracza
                        </a>
                        <a href="#" class="list-group-item list-group-item-action">
                            Wiadomości
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<!-- Bottom of page buttons-->
<div class="row">
    <div class="col-3 m-3">
        @if (User.IsInRole(SD.RoleOwner) || User.IsInRole(SD.RoleAdmin))
        {
            <a asp-controller="Announcement" asp-action="Create" class="btn btn-outline-success m-1"> Dodaj ogłoszenie</a>
        }
    </div>
    <div class="col-sm-6">
        <!--  navigation pages buttons -->
        <div class="card-header float-end m-2 text-primary">
            @{
                int pageNumbersCounter = 1;
                        <label id="PageLabel">Strony:</label>
                if (Model.PageId > 2)
                {
                            <a asp-action="Index" asp-route-pageId="1" class="btn btn-primary" id="PageButton"> 1 </a>
                    if (Model.PageId > 3)
                    {
                                <label> ... </label>
                    }
                }
                double lastPage = Math.Ceiling(Model.Announcements.Count() / (double)postsPerPage);
                for (int i = Model.PageId - 1; i <= lastPage; i++)
                {
                    if (i < 1)
                    {
                        i = 1;
                    }
                    if (pageNumbersCounter == 4 && i != lastPage)
                    {
                                <label> ... </label>
                                <a asp-action="Index" asp-route-pageId="@lastPage" class="btn btn-primary" id="PageButton">
                                    @lastPage
                                </a>
                        break;
                    }
                    if (i == Model.PageId)
                    {
                                <a class="btn alert-primary disabled" id="CurrentPageButton"> @i </a>
                    }
                    else
                    {
                                <a asp-action="Index" asp-route-pageId="@i" class="btn btn-primary" id="PageButton"> @i </a>
                    }
                    pageNumbersCounter++;
                }
            }
        </div>
    </div>
</div>
</div>
</div>
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="js/Home/Delete.js"></script>
    <script src="js/User/Comments.js"></script>
}